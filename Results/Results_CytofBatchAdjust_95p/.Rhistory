setwd("~/")
tableofmasses <- read.table("~/tableofmasses", row.names=1, quote="\"")
View(tableofmasses)
Venn_input <- read.csv("~/Desktop/Venn_input.csv")
View(Venn_input)
data <- read.csv("~/Desktop/Venn_input.csv")
View(Venn_input)
data <- read.csv("~/Desktop/Venn_input.csv")
View(Venn_input)
View(data)
venn =
list(Halophile=
data %>%
.$Halophile,
Alkaliphile =
data %>%
.$Alkaliphile,
Psychrophile =
data %>%
.$Psychrophile,
Thermophile =
data %>%
.$Thermophile,
Acidophile =
data %>%
.$Acidophile,
Barophile =
data %>%
.$Barophile)
venn =
list(Halophile = data %>% .$Halophile,
Alkaliphile =
data %>%
.$Alkaliphile,
Psychrophile =
data %>%
.$Psychrophile,
Thermophile =
data %>%
.$Thermophile,
Acidophile =
data %>%
.$Acidophile,
Barophile =
data %>%
.$Barophile;)
venn =
list(Halophile = data %>% .$Halophile,
Alkaliphile =
data %>%
.$Alkaliphile,
Psychrophile =
data %>%
.$Psychrophile,
Thermophile =
data %>%
.$Thermophile,
Acidophile =
data %>%
.$Acidophile,
Barophile =
data %>%
.$Barophile)
library(venn); library(tidyverse); library(stringr);
venn =
list(Halophile = data %>% .$Halophile,
Alkaliphile =
data %>%
.$Alkaliphile,
Psychrophile =
data %>%
.$Psychrophile,
Thermophile =
data %>%
.$Thermophile,
Acidophile =
data %>%
.$Acidophile,
Barophile =
data %>%
.$Barophile)
png("extr_venn.png", width = 800, height = 800)
venn.result =
venn(venn, ilabels = TRUE,
zcolor = "style", size = 25, cexil = 1.2, cexsn = 1.5);
dev.off()
dev.off()
png("extr_venn.png", width = 800, height = 800)
venn.result =
venn(venn, ilabels = TRUE,
zcolor = "style", size = 25, cexil = 1.2, cexsn = 1.5);
dev.off()
png("extr_venn.png", width = 800, height = 800)
venn.result =
venn(venn, ilabels = TRUE,
zcolor = "style", size = 25, cexil = 2.0, cexsn = 1.5);
png("extr_venn.png", width = 800, height = 800)
venn.result =
venn(venn, ilabels = TRUE,
zcolor = "style", size = 25, cexil = 2.0, cexsn = 1.5);
png("ven.png", width = 800, height = 800)
venn.result =
venn(venn, ilabels = TRUE,
zcolor = "style", size = 25, cexil = 2.0, cexsn = 2.0);
venn =
list(Halophile = data %>% .$Halophile,
Alkaliphile =
data %>%
.$Alkaliphile,
Psychrophile =
data %>%
.$Psychrophile,
Thermophile =
data %>%
.$Thermophile,
Acidophile =
data %>%
.$Acidophile,
Barophile =
data %>%
.$Barophile)
png("extr_venn.png", width = 800, height = 800)
venn.result =
venn(venn, ilabels = TRUE,
zcolor = "style", size = 25, cexil = 2.0, cexsn = 1.5);
dev.off()
venn =
list(Halophile = data %>% .$Halophile,
Alkaliphile =
data %>%
.$Alkaliphile,
Psychrophile =
data %>%
.$Psychrophile,
Thermophile =
data %>%
.$Thermophile,
Acidophile =
data %>%
.$Acidophile,
Barophile =
data %>%
.$Barophile)
png("extr_venn.png", width = 800, height = 800)
venn.result =
venn(venn, ilabels = TRUE,
zcolor = "style", size = 25, cexil = 2.0, cexsn = 1.5);
dput(data)
library(venn); library(tidyverse); library(stringr);
data <- read.csv("~/Desktop/Venn_input.csv")
View(data)
venn =
list(Halophile = data %>% .$Halophile,
Alkaliphile =
data %>%
.$Alkaliphile,
Psychrophile =
data %>%
.$Psychrophile,
Thermophile =
data %>%
.$Thermophile,
Acidophile =
data %>%
.$Acidophile,
Barophile =
data %>%
.$Barophile)
png("extr_venn.png", width = 800, height = 800)
venn.result =
venn(venn, ilabels = TRUE,
zcolor = "style", size = 25, cexil = 2.0, cexsn = 1.5);
venn =
list(Halophile = data %>% .$Halophile,
Alkaliphile =
data %>%
.$Alkaliphile,
Psychrophile =
data %>%
.$Psychrophile,
Thermophile =
data %>%
.$Thermophile,
Acidophile =
data %>%
.$Acidophile,
Barophile =
data %>%
.$Barophile)
png("venn.png", width = 800, height = 800)
venn.result =
venn(venn, ilabels = TRUE,
zcolor = "style", size = 25, cexil = 2.0, cexsn = 1.5);
venn.result =
venn(venn, ilabels = TRUE,
zcolor = "style", size = 25, cexil = 1.5, cexsn = 1.5);
venn(6)
dev.off()
dev.off()
dev.on()
print(venn.result)
print(venn)
setwd("~/Desktop/Flow_Cytometry_Trail/Scripts_and_Data_for_MDS and markerintensity_plots/T cell panel/CytofBatchAdjust_try")
devtools::install_github("rstudio/rstudioapi")
library('flowCore')
library('Biobase')
if(!require('data.table')) {install.packages('data.table')}
library('data.table')
dirname(rstudioapi::getActiveDocumentContext()$path)            # Finds the directory where this script is located
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))     # Sets the working directory to where the script is located
getwd()
PrimaryDirectory <- getwd()
PrimaryDirectory
PrimaryDirectory <- getwd()
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
FileNames <- list.files(path=PrimaryDirectory, pattern = ".fcs")
FileNames
as.matrix(FileNames)
DataList=list()
for (File in FileNames) { # Loop to read files into the list
tempdata <- exprs(read.FCS(File, transformation = FALSE))
tempdata <- tempdata[1:nrow(tempdata),1:ncol(tempdata)]
File <- gsub(".fcs", "", File)
DataList[[File]] <- tempdata
}
rm(tempdata)
AllSampleNames <- names(DataList)
head(DataList)
x <- Sys.time()
x <- gsub(":", "-", x)
x <- gsub(" ", "_", x)
newdir <- paste0("Output_FCS-to-CSV", "_", x)
setwd(PrimaryDirectory)
dir.create(paste0(newdir), showWarnings = FALSE)
setwd(newdir)
for(i in c(1:length(AllSampleNames))){
data_subset <- DataList[i][[1]]
data_subset <- as.data.frame(data_subset)
colnames(data_subset)
#data_subset <- rbindlist(as.list(data_subset$sample_data))
dim(data_subset)
a <- names(DataList)[i]
write.csv(data_subset, paste0(a, ".csv"))
}
library("flowCore")
source("BatchAdjust.R")
setwd("~/Desktop/Flow_Cytometry_Trail/Scripts_and_Data_for_MDS and markerintensity_plots/T cell panel/CytofBatchAdjust_try")
library("flowCore")
source("BatchAdjust.R")
setwd("~/Desktop/Flow_Cytometry_Trail/Scripts_and_Data_for_MDS and markerintensity_plots/T cell panel/CytofBatchAdjust")
library("flowCore")
source("BatchAdjust.R")
BatchAdjust(
basedir=".",
outdir="./Results_1",
channelsFile = "ChannelsToAdjust.txt",
batchKeyword="T_live_",
anchorKeyword = "Ns",
method="95p",
transformation=FALSE,
addExt=NULL,
plotDiagnostics=TRUE)
warnings()
BatchAdjust(
basedir=".",
outdir="./Results_2",
channelsFile = "ChannelsToAdjust.txt",
batchKeyword="T_live_",
anchorKeyword = "Ns",
method="95p",
transformation=FALSE,
addExt=NULL,
plotDiagnostics=TRUE,
truncate_max_range = FALSE)
BatchAdjust(
basedir=".",
outdir="./Results_2",
channelsFile = "ChannelsToAdjust.txt",
batchKeyword="T_live_",
anchorKeyword = "Ns",
method="95p",
transformation=FALSE,
addExt=NULL,
plotDiagnostics=TRUE,
truncate_max_range = FALSE,)
BatchAdjust(
basedir=".",
outdir="./Results_2",
channelsFile = "ChannelsToAdjust.txt",
batchKeyword="T_live_",
anchorKeyword = "Ns",
method="80p",
transformation=FALSE,
addExt=NULL,
plotDiagnostics=TRUE)
load("/home/rashmi/Desktop/Flow_Cytometry_Trail/Scripts_and_Data_for_MDS and markerintensity_plots/T cell panel/CytofBatchAdjust/Results_2/scalingFactorsList.Rdata")
View(scalingFactorsList)
setwd("~/Desktop/Flow_Cytometry_Trail/Scripts_and_Data_for_MDS and markerintensity_plots/T cell panel/CytofBatchAdjust/Results_CytofBatchAdjust_95p")
library(readxl)
library(flowCore)
md <- read_excel("metadata_file.xlsx")
md$'Condition(RA/HC)' <- factor(md$'Condition(RA/HC)',levels = c("Healthy_Control","Ruematoid_Arthritis"))
color_conditions <- c("#6A3D9A", "#FF7F00")
names(color_conditions) <- levels(md$'Condition(RA/HC)')
fcs_filename <- "fcs_files.zip"
unzip(fcs_filename)
head(md)
fcs_raw <- read.flowSet(md$filename, transformation = FALSE, truncate_max_range = FALSE)
panel_filename <- "panel.xlsx"
panel <- read_excel(panel_filename)
head(data.frame(panel))
panel$Antigen <- gsub("-", "_", panel$Antigen)
panel_fcs <- pData(parameters(fcs_raw[[1]]))
head(panel_fcs)
panel_fcs$desc
parameters(fcs_raw[[1]])
summary(fcs_raw[1])
panel_fcs$desc <- gsub("-", "_", panel_fcs$desc)
(lineage_markers <- panel$Antigen[panel$Lineage == 1])
(functional_markers <- panel$Antigen[panel$Functional == 1])
all(lineage_markers %in% panel_fcs$desc)
all(functional_markers %in% panel_fcs$desc)
fcs <- fsApply(fcs_raw, function(x, cofactor = 150){
colnames(x) <- panel_fcs$desc
expr <- exprs(x)
expr <- asinh(expr[, c(lineage_markers, functional_markers)] / cofactor)
exprs(x) <- expr
x
})
fcs
expr <- fsApply(fcs, exprs)
expr <- expr[, -2]
expr <- expr[, -6]
library(matrixStats)
rng <- colQuantiles(expr, probs = c(0.01, 0.99))
expr01 <- t((t(expr) - rng[, 1]) / (rng[, 2] - rng[, 1]))
expr01[expr01 < 0] <- 0
expr01[expr01 > 1] <- 1
hist(expr)
View(expr)
sample_ids <- rep(md$sample_id, fsApply(fcs_raw, nrow))
library(ggplot2)
library(reshape2)
ggdf <- data.frame(sample_id = sample_ids, expr)
ggdf <- melt(ggdf, id.var = "sample_id",
value.name = "expression", variable.name = "antigen")
mm <- match(ggdf$sample_id, md$sample_id)
ggdf$condition <- md$'Condition(RA/HC)'[mm]
ggplot(ggdf, aes(x = expression, color = condition,
group = sample_id)) +
geom_density() +
facet_wrap(~ antigen, nrow = 4, scales = "free") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
strip.text = element_text(size = 7), axis.text = element_text(size = 5)) +
guides(color = guide_legend(ncol = 1)) +
scale_color_manual(values = color_conditions)
library(dplyr)
dev.off()
setwd("~/Desktop/Flow_Cytometry_Trail/Scripts_and_Data_for_MDS and markerintensity_plots/T cell panel/CytofBatchAdjust/Results_CytofBatchAdjust_95p")
library(readxl)
library(flowCore)
md <- read_excel("metadata_file.xlsx")
md$'Condition(RA/HC)' <- factor(md$'Condition(RA/HC)',levels = c("Healthy_Control","Ruematoid_Arthritis"))
color_conditions <- c("#6A3D9A", "#FF7F00")
names(color_conditions) <- levels(md$'Condition(RA/HC)')
fcs_filename <- "fcs_files.zip"
unzip(fcs_filename)
head(md)
fcs_raw <- read.flowSet(md$filename, transformation = FALSE, truncate_max_range = FALSE)
panel_filename <- "panel.xlsx"
panel <- read_excel(panel_filename)
head(data.frame(panel))
panel$Antigen <- gsub("-", "_", panel$Antigen)
panel_fcs <- pData(parameters(fcs_raw[[1]]))
head(panel_fcs)
panel_fcs$desc
parameters(fcs_raw[[1]])
summary(fcs_raw[1])
panel_fcs$desc <- gsub("-", "_", panel_fcs$desc)
(lineage_markers <- panel$Antigen[panel$Lineage == 1])
(functional_markers <- panel$Antigen[panel$Functional == 1])
all(lineage_markers %in% panel_fcs$desc)
all(functional_markers %in% panel_fcs$desc)
fcs <- fsApply(fcs_raw, function(x, cofactor = 150){
colnames(x) <- panel_fcs$desc
expr <- exprs(x)
expr <- asinh(expr[, c(lineage_markers, functional_markers)] / cofactor)
exprs(x) <- expr
x
})
fcs
expr <- fsApply(fcs, exprs)
expr <- expr[, -2]
expr <- expr[, -6]
library(matrixStats)
rng <- colQuantiles(expr, probs = c(0.01, 0.99))
expr01 <- t((t(expr) - rng[, 1]) / (rng[, 2] - rng[, 1]))
expr01[expr01 < 0] <- 0
expr01[expr01 > 1] <- 1
hist(expr)
View(expr)
sample_ids <- rep(md$sample_id, fsApply(fcs_raw, nrow))
library(ggplot2)
library(reshape2)
ggdf <- data.frame(sample_id = sample_ids, expr)
ggdf <- melt(ggdf, id.var = "sample_id",
value.name = "expression", variable.name = "antigen")
mm <- match(ggdf$sample_id, md$sample_id)
ggdf$condition <- md$'Condition(RA/HC)'[mm]
ggplot(ggdf, aes(x = expression, color = condition,
group = sample_id)) +
geom_density() +
facet_wrap(~ antigen, nrow = 4, scales = "free") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
strip.text = element_text(size = 7), axis.text = element_text(size = 5)) +
guides(color = guide_legend(ncol = 1)) +
scale_color_manual(values = color_conditions)
library(dplyr)
getwd()
$path
path
setwd() <- "/home/rashmi/Desktop/Flow_Cytometry_Trail/Scripts_and_Data_for_MDS and markerintensity_plots/T cell panel/CytofBatchAdjust/Results_CytofBatchAdjust_95p"
setwd() <- /home/rashmi/Desktop/Flow_Cytometry_Trail/Scripts_and_Data_for_MDS and markerintensity_plots/T cell panel/CytofBatchAdjust/Results_CytofBatchAdjust_95p
setwd() <- home/rashmi/Desktop/Flow_Cytometry_Trail/Scripts_and_Data_for_MDS and markerintensity_plots/T cell panel/CytofBatchAdjust/Results_CytofBatchAdjust_95p
PrimaryDirectory <- getwd()
PrimaryDirectory
PrimaryDirectory <- getwd()
> PrimaryDirectory
[1] "/home/rashmi/Desktop/Flow_Cytometry_Trail/Scripts_and_Data_for_MDS and markerintensity_plots/T cell panel/CytofBatchAdjust/Results_CytofBatchAdjust_95p"
PrimaryDirectory <- getwd()  PrimaryDirectory
[1] "/home/rashmi/Desktop/Flow_Cytometry_Trail/Scripts_and_Data_for_MDS and markerintensity_plots/T cell panel/CytofBatchAdjust/Results_CytofBatchAdjust_95p"
PrimaryDirectory <- getwd()  PrimaryDirectory
[1] "/home/rashmi/Desktop/Flow_Cytometry_Trail/Scripts_and_Data_for_MDS and markerintensity_plots/T cell panel/CytofBatchAdjust/Results_CytofBatchAdjust_95p"
PrimaryDirectory <- getwd()
getwd()
library(readxl)
library(flowCore)
md <- read_excel("metadata_file.xlsx")
md$'Condition(RA/HC)' <- factor(md$'Condition(RA/HC)',levels = c("Healthy_Control","Ruematoid_Arthritis"))
color_conditions <- c("#6A3D9A", "#FF7F00")
names(color_conditions) <- levels(md$'Condition(RA/HC)')
fcs_filename <- "fcs_files.zip"
unzip(fcs_filename)
head(md)
fcs_raw <- read.flowSet(md$filename, transformation = FALSE, truncate_max_range = FALSE)
panel_filename <- "panel.xlsx"
panel <- read_excel(panel_filename)
head(data.frame(panel))
panel$Antigen <- gsub("-", "_", panel$Antigen)
panel_fcs <- pData(parameters(fcs_raw[[1]]))
head(panel_fcs)
panel_fcs$desc
parameters(fcs_raw[[1]])
summary(fcs_raw[1])
panel_fcs$desc <- gsub("-", "_", panel_fcs$desc)
(lineage_markers <- panel$Antigen[panel$Lineage == 1])
(functional_markers <- panel$Antigen[panel$Functional == 1])
all(lineage_markers %in% panel_fcs$desc)
all(functional_markers %in% panel_fcs$desc)
fcs <- fsApply(fcs_raw, function(x, cofactor = 150){
colnames(x) <- panel_fcs$desc
expr <- exprs(x)
expr <- asinh(expr[, c(lineage_markers, functional_markers)] / cofactor)
exprs(x) <- expr
x
})
fcs
expr <- fsApply(fcs, exprs)
expr <- expr[, -2]
expr <- expr[, -6]
library(matrixStats)
rng <- colQuantiles(expr, probs = c(0.01, 0.99))
expr01 <- t((t(expr) - rng[, 1]) / (rng[, 2] - rng[, 1]))
expr01[expr01 < 0] <- 0
expr01[expr01 > 1] <- 1
hist(expr)
View(expr)
sample_ids <- rep(md$sample_id, fsApply(fcs_raw, nrow))
library(ggplot2)
library(reshape2)
ggdf <- data.frame(sample_id = sample_ids, expr)
ggdf <- melt(ggdf, id.var = "sample_id",
value.name = "expression", variable.name = "antigen")
mm <- match(ggdf$sample_id, md$sample_id)
ggdf$condition <- md$'Condition(RA/HC)'[mm]
ggplot(ggdf, aes(x = expression, color = condition,
group = sample_id)) +
geom_density() +
facet_wrap(~ antigen, nrow = 4, scales = "free") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
strip.text = element_text(size = 7), axis.text = element_text(size = 5)) +
guides(color = guide_legend(ncol = 1)) +
scale_color_manual(values = color_conditions)
library(dplyr)
